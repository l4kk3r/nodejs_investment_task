const express = require("express")
const router = express.Router()
const mongoose = require('mongoose')
const User = mongoose.model("User")
const Post = mongoose.model("Post")
const Answer = mongoose.model("Answer")
const {telebot, } = require('../bots/telegram')
const checkToken = require('../middleware/checkToken')
 
// telegram-bot-config

//routes for any users
router.post('/user/createpost', function (req, res) {
    const post = new Post(req.body)
    post.save().then(post => {
        console.log(post)
        telebot.sendMessage('@inv777', `üìù#–ù–æ–≤–∞—è–ó–∞—è–≤–∫–∞\n–û–±—ä–µ–∫—Ç: ${req.body.object}\n–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –µ—ë –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç!`)
        return res.json({message:"–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞"})
    }).catch(err=> {
        console.log(err)
        return res.json({message: '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.'})
    })
})

router.get('/allpublished', function (req, res) {
    Post.find({status:"–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤"}).then(posts => {
        return res.json({posts})
    })
})

router.get('/admin/allposts', function (req, res) {
    Answer.find({}).then(answers => {Post.find({}).then(posts => {return res.json({posts, answers})})})
})

router.post('/newanswer',  function (req,res) {
    const {amount, rate, period} = req.body
    const answer = new Answer(req.body)
    answer.save().then(answer=> {
        console.log(answer)
        telebot.sendMessage('@inv777', `üì¨#–ù–æ–≤—ã–π–û—Ç–≤–µ—Ç\n–û–±—ä—è–≤–ª–µ–Ω–∏–µ: bit.ly/asssa\n–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è —Å—É–º–º–∞: ${amount}\n–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è —Å—Ç–∞–≤–∫–∞: ${rate}\n–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π —Å—Ä–æ–∫: ${period}\n–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç!`)
        return res.json({message: '–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'})
    }).catch(err=> {
        console.log(err)
        return res.json({message: '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.'})
    })
})

//admin routes

router.post('/updatepost', function (req, res) {
    const {id} = req.body
    Post.updateOne({id}, {$set: req.body}).then(ans=>{return res.json({message:"–ó–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞"})})
    if (req.body.status === '–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤') {
        User.find({telegram_notify: 'available', fmin_amount: { $gt: req.body.amount }, fmax_amount: {$gt: req.body.amount * -1}}).then(users => {
            for (user in users) {
                console.log(users[user])
                telebot.sendMessage(users[user].telegram_login, `–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ! http://localhost:3000/post/${req.body.id}`)
            }
        })
    }
})

router.post('/getposts', function (req, res) {
    const {creator_id} = req.body
    Answer.find({creator_id}).then(answers => {Post.find({creator_id}).then(posts => {return res.json({posts, answers})})})
})

router.post('/user/updatepost', function (req, res) {
    const {id} = req.body
    Post.updateOne({id}, {$set: req.body}).then(ans => {return res.json({message: "–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞"})})
})



module.exports = router